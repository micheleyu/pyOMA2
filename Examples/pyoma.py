# -*- coding: utf-8 -*-
"""pyOMA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j9tp8SBh-6N8crmbyc3jSRaO7UEq5GPb
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import pyoma2 as oma

from pyoma2.algorithms import SSIdat_MS
from pyoma2.algorithms import pLSCF,FSDD,SSIcov
from pyoma2.setup import MultiSetup_PreGER

data1 = pd.read_csv("Setup1.txt", sep='\t').to_numpy()
data2 = pd.read_csv("Setup2.txt", sep='\t').to_numpy()
data = [data1, data2]

ref_ind = [[0,1,2,15,16,17,21,22,23],[0,1,2,15,16,17,21,22,23]]
boveda = MultiSetup_PreGER(fs=100, ref_ind=ref_ind, datasets=data)

boveda.decimate_data(q=2)
_, _ = boveda.plot_ch_info(data_idx=[1],ch_idx=[2])

# data1 = data.to_numpy()
# data2 = data.to_numpy()

#n_accel = 7 # Number of sensors
#n_channel = 2 # Number of channels/sensor

#fig, axs = plt.subplots(n_accel, n_channel, figsize=(10, 10))
#z = 0
#for i in range(n_accel):
#  for j in range(n_channel):
#    ax = axs[i, j]
#    ax.plot(data[:, z])
#    z += 1
#
#fig.tight_layout()  # Ajusta el espaciado
#plt.subplots_adjust(hspace=0.3, wspace=0.3)  # Ajusta el espaciado entre subplots
#
#plt.show()

# frame_4P = SingleSetup(data, fs=250)

boveda.def_geo1_by_file("Geo1_ms.xlsx")
boveda.def_geo2_by_file("Geo2_ms.xlsx")

# Initialise the algorithms
ssidat = SSIdat_MS(name="SSIdat", br=80, ordmax=80)

# Add algorithms to the class
boveda.add_algorithms(ssidat)
boveda.run_all()

# Plot
_, _ = ssidat.plot_stab(freqlim=(2,18))

# plt.show()

# get modal parameters
boveda.mpe(
    "SSIdat",
    sel_freq=[8.0, 10.69, 14.32],
    order_in=80)

# plot mode shapes
_, _ = boveda.plot_mode_geo1(algo_res=ssidat.result, mode_nr=1, view="3D", scaleF=2)
_ = boveda.plot_mode_geo2_mpl(algo_res=ssidat.result, mode_nr=1, scaleF=1, notebook=True)
_ = boveda.plot_mode_geo2_mpl(algo_res=ssidat.result, mode_nr=2, scaleF=1, notebook=True)
_ = boveda.plot_mode_geo2_mpl(algo_res=ssidat.result, mode_nr=3, scaleF=1, notebook=True)

plt.show()

# boveda.geo1.bg_nodes

# #_, _ = boveda.plot_geo1(scaleF=0.1)
# fig11 = boveda.plot_geo2(scaleF=0.1)

# _, _ = boveda.plot_data(nc=2)

# boveda.filter_data(Wn=(0.1, 25), order=8, btype="bandpass")
# boveda.decimate_data(q=5)
# #_, _ = frame_4P.plot_ch_info(ch_idx=[0])

# # Initialise the algorithms
# fsdd = FSDD(name="FSDD", nxseg=1024, method_SD="cor")
# ssicov = SSIcov(name="SSIcov", br=30, ordmax=30, calc_unc=True)
# plscf = pLSCF(name="polymax",ordmax=30)

# # Overwrite/update run parameters for an algorithm
# fsdd.run_params = FSDD.RunParamCls(nxseg=1024, method_SD="per", pov=0.5)

# # Add algorithms to the single setup class
# boveda.add_algorithms(ssicov, fsdd, plscf)

# # Run all or run by name
# boveda.run_by_name("SSIcov")
# boveda.run_by_name("FSDD")
# boveda.run_by_name("polymax")
# # frame_4P.run_all()

# # save dict of results
# ssi_res = ssicov.result.model_dump()
# fsdd_res = dict(fsdd.result)

# # plot Singular values of PSD
# fig1, ax = fsdd.plot_CMIF()
# ax.set_xlim(1, 10)
# ax.set_ylim(-15, 5)
# ax.minorticks_on()
# ax.grid(which='major', linestyle='-', linewidth='0.5', color='black')
# ax.grid(which='minor', linestyle=':', linewidth='0.5', color='black')

# # plot Stabilisation chart for SSI
# _, _ = ssicov.plot_stab(freqlim=(1,10), hide_poles=False)

# # plot frequecy-damping clusters for SSI
# _, _ = ssicov.plot_freqvsdamp(freqlim=(1,10))

# # plot Stabilisation chart for pLSCF
# _, _ = plscf.plot_stab(freqlim=(1,10), hide_poles=False)

# # Select modes to extract from plots
# #frame_4P.mpe_from_plot("FSDD", freqlim=(0.5,15), MAClim=0.95)

# # or directly
# boveda.mpe("FSDD", sel_freq=[1.4, 4.1, 5.6, 6.6, 8.4], MAClim=0.95)

# # update dict of results
# fsdd_res = dict(fsdd.result)

# ssicov.result.Fn

# fsdd.result.Fn

# # plot additional info (goodness of fit) for EFDD or FSDD
# _, _ = frame_4P[fsdd.name].plot_EFDDfit(freqlim=(0.5,15))

# # Mode shape plots
# # Plot mode 1 (geometry 1)
# boveda.plot_mode_geo2(algo_res=fsdd.result, mode_nr=1, view="3D", scaleF=0.5)
# boveda.plot_mode_geo2(algo_res=fsdd.result, mode_nr=2, view="3D", scaleF=0.5)
# boveda.plot_mode_geo2(algo_res=fsdd.result, mode_nr=3, view="3D", scaleF=0.5)
# boveda.plot_mode_geo2(algo_res=fsdd.result, mode_nr=4, view="3D", scaleF=0.5)
# boveda.plot_mode_geo2(algo_res=fsdd.result, mode_nr=5, view="3D", scaleF=0.5)

# # Show the plot
# plt.show()

# # Animate mode 1 (geometry 2)
# #_ = frame_4P.anim_mode_geo2(algo_res=ssicov.result, mode_nr=1, scaleF=3)

# import os
# import sys
# import pathlib
# # Add the directory we executed the script from to path:
# sys.path.insert(0, os.path.realpath('__file__'))

# from pyoma2.functions.gen import save_to_file, load_from_file

# # Save setup
# save_to_file(boveda, pathlib.Path(r"./test.pkl"))